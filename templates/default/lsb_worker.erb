#!/bin/bash
# <%= @worker_name %>
# chkconfig: 345 20 80
# description: <%= @worker_name %> worker
# processname: <%= @worker_name %>
# author: Richard Sumilang <me@richardsumilang.com>
#

# Configuration
ACCEPTABLE=<%= @acceptable %>
OUTPUT_FILE=<%= @output_file %>
COMMAND="<%= @command %>"
NAME=<%= @worker_name %>
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME


case "$1" in
start)

	FINAL_CMD="daemon -n $NAME -U -r --acceptable=$ACCEPTABLE --output=$OUTPUT_FILE --pidfile=$PIDFILE $COMMAND"
	exec $($FINAL_CMD <&- >&- 2>&- )&
	sleep 1
	PID=`cat $PIDFILE`
	#echo "Saving PID" $PID " to " $PIDFILE
	if [ -z $PID ]; then
		printf "%s\n" "Failed to start $NAME"
	else
		echo $PID > $PIDFILE
		printf "%s\n" "Ok"
	fi
;;
status)
	printf "%-50s" "Checking $NAME..."
	if [ -f $PIDFILE ]; then
		PID=`cat $PIDFILE`
		if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
			printf "%s\n" "Process dead but pidfile exists"
		else
			echo "Running"
		fi
	else
		printf "%s\n" "Service not running"
	fi
;;
stop)
	printf "%-50s" "Stopping $NAME"
	PID=`cat $PIDFILE`
	if [ -f $PIDFILE ]; then
		kill $PID
		printf "%s\n" "Ok"
		rm -f $PIDFILE
	else
		printf "%s\n" "pidfile not found"
	fi
;;

restart)
	$0 stop
	$0 start
;;

*)
	echo "Usage: $0 {status|start|stop|restart}"
	exit 1
esac